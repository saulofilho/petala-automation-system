---
openapi: 3.0.3
info:
  title: Psicon Service
  version: v1
paths:
  "/v1/companies/{id}":
    get:
      summary: show a company
      tags:
      - Companies
      operationId: company_show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: company founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/company"
        '404':
          description: company not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
    put:
      summary: update a company
      tags:
      - Companies
      operationId: company_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: company updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/company"
        '404':
          description: company not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/company_update"
    delete:
      summary: destroy a company
      tags:
      - Companies
      operationId: company_destroy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: company destroyed
        '404':
          description: company not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/v1/users/{user_id}/companies":
    post:
      summary: create a company
      tags:
      - Companies
      operationId: company_create
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: company created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/company"
        '422':
          description: with invalid params
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/company"
  "/v1/order_items/{id}":
    get:
      summary: show an order item
      tags:
      - OrderItems
      operationId: order_item_show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: order item founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order_item"
        '404':
          description: order_item not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
    put:
      summary: update an order item
      tags:
      - OrderItems
      operationId: order_item_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: order item updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order_item"
        '404':
          description: order item not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/order_item_update"
    delete:
      summary: destroy an order item
      tags:
      - OrderItems
      operationId: order_item_destroy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: order item destroyed
        '404':
          description: order item not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/v1/orders/{order_id}/order_items":
    post:
      summary: create a order item
      tags:
      - OrderItems
      operationId: order_item_create
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: order item created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order_item"
        '422':
          description: with invalid params
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/order_item"
  "/v1/orders/{id}":
    get:
      summary: show an order
      tags:
      - Orders
      operationId: order_show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: order founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order"
        '404':
          description: order not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
    put:
      summary: update an order
      tags:
      - Orders
      operationId: order_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: order updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order"
        '404':
          description: order not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/order_update"
    delete:
      summary: destroy an order
      tags:
      - Orders
      operationId: order_destroy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: order destroyed
        '404':
          description: order not founded
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: user not owner
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/v1/companies/{company_id}/orders":
    post:
      summary: create a order
      tags:
      - Orders
      operationId: order_create
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: order created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order"
        '422':
          description: with invalid params
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: invalid session
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/order"
  "/v1/users":
    post:
      summary: create a user
      tags:
      - Users
      operationId: user_create
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    "$ref": "#/components/schemas/user"
                required:
                - user
        '422':
          description: invalid resource
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_user"
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: ''
components:
  schemas:
    error_response:
      type: object
      properties:
        error:
          "$ref": "#/components/schemas/exception"
      required:
      - error
    exception:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    create_user:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            role:
              type: integer
    user:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        cpf:
          type: string
        phone:
          type: string
        roles:
          type: string
    user_response:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
    change_password:
      type: object
      properties:
        new_password:
          type: string
    session_response:
      type: object
      properties:
        session_token:
          type: string
    company:
      type: object
      properties:
        name:
          type: string
        cnpj:
          type: string
        cep:
          type: string
        street:
          type: string
        number:
          type: integer
        city:
          type: string
        state:
          type: string
        user_id:
          type: integer
    company_update:
      type: object
      properties:
        name:
          type: string
        cnpj:
          type: string
        cep:
          type: string
        street:
          type: string
        number:
          type: integer
        city:
          type: string
        state:
          type: string
    order:
      type: object
      properties:
        name:
          type: string
        company_id:
          type: integer
    order_update:
      type: object
      properties:
        name:
          type: string
    order_item:
      type: object
      properties:
        code:
          type: string
        product:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        ean_code:
          type: string
        admin_feedback:
          type: string
          nullable: true
        status:
          type: string
          default: pending
        order_id:
          type: integer
    order_item_update:
      type: object
      properties:
        code:
          type: string
        product:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        ean_code:
          type: string
        admin_feedback:
          type: string
          nullable: true
        status:
          type: string
          default: pending
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
    basic_auth:
      type: http
      scheme: basic
